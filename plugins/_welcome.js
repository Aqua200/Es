import { WAMessageStubType } from '@whiskeysockets/baileys'
import fetch from 'node-fetch'

export async function before(m, { conn, participants, groupMetadata }) {
  try {
    if (!m.messageStubType || !m.isGroup) return true

    let who = m.messageStubParameters[0]
    let taguser = `@${who.split('@')[0]}`
    let chat = global.db.data.chats[m.chat]

    // Mensajes de bienvenida
    const welcomeMessages = [
      `üå∏ *¬°Bienvenido* a la familia de ${groupMetadata.subject}*\n‚ú® *Hola, ${taguser}!*\nüíñ *Nos alegra mucho tenerte aqu√≠.*\nüåü *¬°Disfruta y si necesitas ayuda, escribe #help!*`,
      `üéâ *Un nuevo miembro ha llegado a ${groupMetadata.subject}*!\nüí´ *Bienvenido, ${taguser}!* Nos alegra tenerte con nosotros.\n‚ú® *¬°Aqu√≠ te sentir√°s como en casa!*`,
      // Agrega m√°s mensajes aqu√≠ seg√∫n lo necesites
    ];

    // Mensajes de despedida
    const goodbyeMessages = [
      `üçÇ *Adi√≥s, ${taguser}* üò¢\nüåª *Te deseamos lo mejor en tu camino.*\nüíñ *Gracias por haber sido parte de ${groupMetadata.subject}.*\n‚ú® *Te esperamos pronto.*`,
      `üå∏ *Adi√≥s, ${taguser}* üíñ\nüå∫ *Nos entristece verte ir, pero te deseamos lo mejor.*\nüåº *Gracias por ser parte de ${groupMetadata.subject}*.\n‚ú® *Vuelve cuando quieras.*`,
      // Agrega m√°s mensajes aqu√≠ seg√∫n lo necesites
    ];

    // Funci√≥n para seleccionar un mensaje aleatorio
    const getRandomMessage = (messages) => messages[Math.floor(Math.random() * messages.length)];

    // Verificar si la bienvenida est√° activada
    if (chat.welcome) {
      if (m.messageStubType === WAMessageStubType.GROUP_PARTICIPANT_ADD) {
        let bienvenida = getRandomMessage(welcomeMessages);
        console.log("Enviando mensaje de bienvenida:", bienvenida);  // Depuraci√≥n
        await conn.sendMessage(m.chat, { text: bienvenida, mentions: [who] });
      } else if (m.messageStubType === WAMessageStubType.GROUP_PARTICIPANT_REMOVE || m.messageStubType === WAMessageStubType.GROUP_PARTICIPANT_LEAVE) {
        let bye = getRandomMessage(goodbyeMessages);
        console.log("Enviando mensaje de despedida:", bye);  // Depuraci√≥n
        await conn.sendMessage(m.chat, { text: bye, mentions: [who] });
      }
    }

    return true;
  } catch (error) {
    console.error("Error en el proceso de bienvenida/despedida:", error);
    return false;
  }
}
